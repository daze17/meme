{"version":3,"sources":["components/Header.js","components/MemeGenerator.js","App.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","secondary","Header","ThemeProvider","AppBar","position","className","Toolbar","src","alt","MemeGenerator","handleChange","event","target","name","value","setState","state","topText","bottomText","randomImg","allMemeImgs","handleSubmit","bind","fetch","then","response","json","memes","data","preventDefault","randNum","Math","floor","random","this","length","randMemeImg","url","console","log","Grid","container","spacing","item","xs","FormControl","onSubmit","Input","type","placeholder","onChange","Button","onClick","Component","App","ReactDOM","render","document","getElementById"],"mappings":"uNAIMA,EAAQC,YAAe,CACzBC,QAAS,CACLC,QAAS,CACLC,KAAM,WAERC,UAAW,CACTD,KAAM,cAwBHE,MAnBf,WACI,OACI,kBAACC,EAAA,EAAD,CAAeP,MAAOA,GACtB,kBAACQ,EAAA,EAAD,CAAQC,SAAS,SAASC,UAAU,UACpC,kBAACC,EAAA,EAAD,KACA,yBACQD,UAAU,YACVE,IAAI,+CACJC,IAAI,SAER,oE,gFC0CGC,E,kDA1DX,aAAc,IAAD,8BACT,gBAoBJC,aAAa,SAACC,GAAU,IAAD,EACGA,EAAMC,OAArBC,EADY,EACZA,KAAMC,EADM,EACNA,MACb,EAAKC,SAAL,eACKF,EAAOC,KAtBZ,EAAKE,MAAM,CACPC,QAAS,GACTC,WAAY,GACZC,UAAW,sCACXC,YAAa,IAGjB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBATX,E,gEAWO,IAAD,OACfC,MAAM,qCACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAa,IACRE,EAASF,EAASG,KAAlBD,MACP,EAAKZ,SAAS,CACVK,YAAaO,S,mCAUZhB,GACTA,EAAMkB,iBACN,IAAMC,EAAUC,KAAKC,MAAMD,KAAKE,SAAWC,KAAKlB,MAAMI,YAAYe,QAC5DC,EAAcF,KAAKlB,MAAMI,YAAYU,GAASO,IACpDC,QAAQC,IAAIH,GACZF,KAAKnB,SAAS,CAAEI,UAAWiB,M,+BAI3B,OACI,yBAAK/B,UAAU,iBACf,kBAACmC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAEX,kBAACC,EAAA,EAAD,CAAaxC,UAAU,YAAYyC,SAAUZ,KAAKb,cAC9C,kBAAC0B,EAAA,EAAD,CAAQC,KAAK,OAAOnC,KAAK,UAAUC,MAAOoB,KAAKlB,MAAMC,QAASgC,YAAY,WAAWC,SAAUhB,KAAKxB,eACpG,kBAACqC,EAAA,EAAD,CAAQC,KAAK,OAAOnC,KAAK,aAAaC,MAAOoB,KAAKlB,MAAME,WAAY+B,YAAY,cAAcC,SAAUhB,KAAKxB,eAC7G,kBAACyC,EAAA,EAAD,CAAQC,QAASlB,KAAKb,cAAtB,UAGR,kBAACmB,EAAA,EAAD,CAAOG,MAAI,EAACC,GAAI,EAAGvC,UAAU,QACzB,yBAAKE,IAAK2B,KAAKlB,MAAMG,UAAWX,IAAI,KACpC,wBAAIH,UAAU,OAAO6B,KAAKlB,MAAMC,SAChC,wBAAIZ,UAAU,UAAU6B,KAAKlB,MAAME,mB,GAnD3BmC,aCQbC,MAVf,WAEI,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,QCLZC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.17014fcd.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { AppBar, Toolbar, ThemeProvider } from '@material-ui/core';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#ffab91',\r\n          },\r\n          secondary: {\r\n            main: '#4db6ac',\r\n          },\r\n    },\r\n  });\r\n\r\nfunction Header(){\r\n    return(\r\n        <ThemeProvider theme={theme}>\r\n        <AppBar position=\"static\" className=\"header\" >\r\n        <Toolbar>\r\n        <img\r\n                className=\"headerImg\"\r\n                src=\"https://ggscore.com/media/logo/t51940.png?32\"\r\n                alt=\"doge\"\r\n            />\r\n            <p >Meme Generator ....... by Bilguun</p>\r\n        </Toolbar>\r\n      </AppBar>\r\n      </ThemeProvider>\r\n            \r\n      \r\n    )\r\n}\r\n\r\nexport default Header","import React, {Component} from \"react\"\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { FormControl, Input } from '@material-ui/core'\r\n\r\n\r\n\r\n\r\nclass MemeGenerator extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            topText: \"\",\r\n            bottomText: \"\",\r\n            randomImg: \"https://imgflip.com/s/meme/Doge.jpg\",\r\n            allMemeImgs: []\r\n        }\r\n      //  this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    componentDidMount(){\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            const {memes} = response.data\r\n            this.setState({\r\n                allMemeImgs: memes\r\n            })\r\n        })\r\n    }\r\n    handleChange=(event) =>{\r\n        const {name, value} = event.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    handleSubmit(event){\r\n        event.preventDefault()\r\n        const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length)\r\n        const randMemeImg = this.state.allMemeImgs[randNum].url\r\n        console.log(randMemeImg)\r\n        this.setState({ randomImg: randMemeImg })\r\n    }\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"memeContainer\">\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={6}>\r\n\r\n                    <FormControl className=\"meme-form\" onSubmit={this.handleSubmit}>\r\n                        <Input  type=\"text\" name=\"topText\" value={this.state.topText} placeholder=\"Top text\" onChange={this.handleChange} />\r\n                        <Input  type=\"text\" name=\"bottomText\" value={this.state.bottomText} placeholder=\"Bottom text\" onChange={this.handleChange} />\r\n                        <Button onClick={this.handleSubmit}>Next</Button>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid  item xs={6} className=\"meme\">\r\n                    <img src={this.state.randomImg} alt=\"\" />\r\n                    <h2 className=\"top\">{this.state.topText}</h2>\r\n                    <h2 className=\"bottom\">{this.state.bottomText}</h2>\r\n                </Grid>\r\n            </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MemeGenerator","import React from \"react\"\nimport Header from \"./components/Header\"\nimport MemeGenerator from \"./components/MemeGenerator\"\n\n\n\nfunction App(){\n    \n    return(\n        <div>\n            <Header/>\n            <MemeGenerator/>\n        </div>\n    )\n}\n\nexport default App\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\n\r\n\r\n\r\nReactDOM.render(<App/> , document.getElementById(\"root\"))"],"sourceRoot":""}